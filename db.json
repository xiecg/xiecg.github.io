{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/casper/source/css/normalize.css","path":"css/normalize.css","modified":0,"renderable":1},{"_id":"themes/casper/source/css/screen.css","path":"css/screen.css","modified":0,"renderable":1},{"_id":"themes/casper/source/js/jquery.fitvids.js","path":"js/jquery.fitvids.js","modified":0,"renderable":1},{"_id":"themes/casper/source/js/index.js","path":"js/index.js","modified":0,"renderable":1},{"_id":"themes/casper/source/fonts/icons.dev.svg","path":"fonts/icons.dev.svg","modified":0,"renderable":1},{"_id":"themes/casper/source/fonts/icons.eot","path":"fonts/icons.eot","modified":0,"renderable":1},{"_id":"themes/casper/source/fonts/icons.svg","path":"fonts/icons.svg","modified":0,"renderable":1},{"_id":"themes/casper/source/fonts/icons.ttf","path":"fonts/icons.ttf","modified":0,"renderable":1},{"_id":"themes/casper/source/fonts/icons.woff","path":"fonts/icons.woff","modified":0,"renderable":1}],"Cache":[{"_id":"themes/casper/_config.yml","hash":"495608517b402f4b640689695cefc3ae5f0608ab","modified":1481068735000},{"_id":"source/_posts/flex.md","hash":"f22508e09c3198f8b21923d662b8369e3ed9b5e8","modified":1481068735000},{"_id":"source/_posts/vue-picker.md","hash":"98de2b9c74cf9b009ff3232955a201071085c642","modified":1481068735000},{"_id":"themes/casper/layout/archive.ejs","hash":"eaf7e49f416afce6685e36a24a65a01bb3fe9ae7","modified":1481068735000},{"_id":"themes/casper/layout/category.ejs","hash":"eaf7e49f416afce6685e36a24a65a01bb3fe9ae7","modified":1481068735000},{"_id":"themes/casper/layout/index.ejs","hash":"eaf7e49f416afce6685e36a24a65a01bb3fe9ae7","modified":1481068735000},{"_id":"themes/casper/layout/layout.ejs","hash":"e3c9598002a8c8bd991aa7f0373ff984b643044a","modified":1481068735000},{"_id":"themes/casper/layout/page.ejs","hash":"13a176d843e7d44921e2705203011f0fcb46fcda","modified":1481068735000},{"_id":"themes/casper/layout/post.ejs","hash":"13a176d843e7d44921e2705203011f0fcb46fcda","modified":1481068735000},{"_id":"themes/casper/layout/tag.ejs","hash":"eaf7e49f416afce6685e36a24a65a01bb3fe9ae7","modified":1481068735000},{"_id":"themes/casper/layout/casper/after_all.ejs","hash":"e7cd492d5efe3186e22525d41176c5d5d6321e8c","modified":1481068735000},{"_id":"themes/casper/layout/casper/footer.ejs","hash":"1ebcfcb2305d34f1aba4501c0e2c7cd08049f8db","modified":1481068735000},{"_id":"themes/casper/layout/casper/head.ejs","hash":"88f7bcc882f2e5fae701af8940eaa7d476db0bb5","modified":1481068735000},{"_id":"themes/casper/layout/casper/header.ejs","hash":"f103e0d38c6412d1c5c47100ea7fbebcc2f990c5","modified":1481068735000},{"_id":"themes/casper/layout/casper/index.ejs","hash":"9e278be974863a82b003c6f2fa9c88d8aee29095","modified":1481068735000},{"_id":"themes/casper/layout/casper/post.ejs","hash":"30c608f686a6ac462faa2964608c857b39e39fbf","modified":1481068735000},{"_id":"themes/casper/source/css/normalize.css","hash":"163c60d3a6c1f786754ba07426afbee0dfe82329","modified":1481068735000},{"_id":"themes/casper/source/css/screen.css","hash":"3b67abb1b0534b62e76f407754365541dc8786d5","modified":1481068735000},{"_id":"themes/casper/source/js/jquery.fitvids.js","hash":"0d9ee59f102516b1a988490f27ed37440713cc8b","modified":1481068735000},{"_id":"themes/casper/source/js/index.js","hash":"a04c311b0818023c97446c79a8facdef067a04d1","modified":1481068735000},{"_id":"themes/casper/source/fonts/icons.dev.svg","hash":"193cbbeadd27a72dadb809aa7344df5b9d965d8d","modified":1481068735000},{"_id":"themes/casper/source/fonts/icons.eot","hash":"d1abd4ac9fc6794570a73a5facaaf91492eed03c","modified":1481068735000},{"_id":"themes/casper/source/fonts/icons.svg","hash":"e8deb79bc630c3aa21ccdca71f6f6a43ca8035c1","modified":1481068735000},{"_id":"themes/casper/source/fonts/icons.ttf","hash":"e5247503ef56fd03361442ed082c8f9321e860b8","modified":1481068735000},{"_id":"themes/casper/source/fonts/icons.woff","hash":"31dc8eba4c3c2c799996658b01a5926267ae6af6","modified":1481068735000},{"_id":"themes/casper/layout/casper/post/author.ejs","hash":"d7eb9e85d3bd514cdc03100c4b91f088ad92b539","modified":1481068735000},{"_id":"themes/casper/layout/casper/post/comments.ejs","hash":"0238db82c482e259cdc6fc233e8703228c38ebf3","modified":1481068735000},{"_id":"themes/casper/layout/casper/post/meta.ejs","hash":"c984cdc774bc884b33c8d87e3b59728cfdee773c","modified":1481068735000},{"_id":"themes/casper/layout/casper/post/navigation.ejs","hash":"124f1794f6e859136b3891948c5be68f18234513","modified":1481068735000},{"_id":"themes/casper/layout/casper/post/share.ejs","hash":"1090719e3c49d4adadd7981eeff876b1c014d3e2","modified":1481068735000},{"_id":"public/2016/10/23/vue-picker/index.html","hash":"934611b24bd8ef1b9c310d2b7fa97f1d4f02eee2","modified":1481068750416},{"_id":"public/2016/08/28/flex/index.html","hash":"490a156be130f262f2843b3364edc9ae394cba2e","modified":1481068750416},{"_id":"public/archives/index.html","hash":"82ab53f88caf601eb47bb0d02f136f9fbf0661d7","modified":1481068750417},{"_id":"public/archives/2016/index.html","hash":"baad504a8584ecfb664e0e627d35cf6afc1d45c7","modified":1481068750417},{"_id":"public/archives/2016/08/index.html","hash":"065f78d417de69800960960995d3e88699b28ddc","modified":1481068750417},{"_id":"public/archives/2016/10/index.html","hash":"2dd4e2f6daa682c07aa3b86c1123907e57696e80","modified":1481068750417},{"_id":"public/index.html","hash":"3c623f0fe379c40f48e5d34631f7b05b647ff9b1","modified":1481068750417},{"_id":"public/fonts/icons.dev.svg","hash":"193cbbeadd27a72dadb809aa7344df5b9d965d8d","modified":1481068750419},{"_id":"public/fonts/icons.eot","hash":"d1abd4ac9fc6794570a73a5facaaf91492eed03c","modified":1481068750419},{"_id":"public/fonts/icons.svg","hash":"e8deb79bc630c3aa21ccdca71f6f6a43ca8035c1","modified":1481068750420},{"_id":"public/fonts/icons.ttf","hash":"e5247503ef56fd03361442ed082c8f9321e860b8","modified":1481068750420},{"_id":"public/fonts/icons.woff","hash":"31dc8eba4c3c2c799996658b01a5926267ae6af6","modified":1481068750420},{"_id":"public/css/normalize.css","hash":"163c60d3a6c1f786754ba07426afbee0dfe82329","modified":1481068750424},{"_id":"public/js/jquery.fitvids.js","hash":"0d9ee59f102516b1a988490f27ed37440713cc8b","modified":1481068750424},{"_id":"public/js/index.js","hash":"a04c311b0818023c97446c79a8facdef067a04d1","modified":1481068750424},{"_id":"public/css/screen.css","hash":"3b67abb1b0534b62e76f407754365541dc8786d5","modified":1481068750424}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"深入理解 flex-grow & flex-shrink & flex-basis","date":"2016-08-28T01:14:03.000Z","_content":"\n## 前言\n\n`flex` 有三个属性值，分别是 `flex-grow`， `flex-shrink`， `flex-basis`，默认值是 `0 1 auto`。 发现网上详细介绍他们的文章比较少， 今天就详细说说他们，先一个一个看。\n\n## flex-grow\n\n定义项目的`放大`比例，默认值为`0`，就算存在剩余空间，也不会放大。单单几句话肯定不能表达出意思，来看个DEMO。\n\n[https://jsfiddle.net/xiecg/var5eabk/][1]\n\n\n`flex-grow`的默认值为`0`，如果没有定义该属性，是不会拥有分配`剩余空间`的权利的。`A, B, C, D, E` 的宽度分别是 `100, 120, 130, 100, 100`，父级的宽度是`660`，父级宽减去子级的全部宽度，这样`剩余空间`就是`110`。例子中`B, C`定义了`flex-grow`，分别是`1，2`，那剩余空间分成3份，B`1`份，C`2`份，比例就是`1：2`，分配计算出来的值就是B :`36.666666666666664`, C：`73.33333333333333`。这个时候`剩余空间`就被计算出来了，相加后的结果就是B：`156.66666666666666`，C：`203.33333333333331`。\n\nB的计算公式：`120 + (110 / 3) * 1`\n\nC的计算公式: `130 + (110 / 3) * 2`\n\n## flex-shrink\n\n定义项目的`缩小`比例，默认值为`1`，注意前提是空间不足的情况下，看例子。\n\n[https://jsfiddle.net/xiecg/wLsndgLy/][2]\n\n\n  [1]: https://jsfiddle.net/xiecg/var5eabk/\n  [2]: https://jsfiddle.net/xiecg/wLsndgLy/\n\n\n这里 `A, B, C` 的宽度分别是`155, 200, 50`，(注意这里的宽度我是用`flex-basis`代替的，在这个例子中和`width`的作用是一样的)。 父级宽度是`300`，计算超出的空间就是 `-105`，这样超出的 `105px` 就要被 `A, B, C` 消化掉，比例是`2：1：1`。\n\n如何消化 ？ 首先是每个项目的`wdith`值乘以`flex-shrink`值求积，\n\nA：`(155 * 2) = 310`\nB：`(200 * 1) = 200`\nC：`(50 * 1) = 50`。\n\n然后再求和所有项目的乘积。\n\n`(310 + 200 + 50) = 560`\n\n得到求占比之后还要乘以要腾出的空间。\n\nA：`(310 / 560) * 105` = `58.125`\nB：`(200 / 560) * 105` = `37.5`\nC：`(50 / 560) * 105` = `9.375`\n\n得到每一项要腾出的空间後然後\n\nA：`(155 - 58.125) = 96.875`\nB：`(200 - 37.5) = 162.5`\nC：`(50 - 9.375) = 40.625`\n\n好了，这样就得出计算后的宽度了。\n\n## flex-basis\n\n和`width`一样，他的默认值为`auto`，把上面几个例子换成`width`也是一样的。当然工作中最好用`flex-basis`，更符合规范。\n\n## 总结\n\n如果父级的空间足够：`flex-grow`有效，`flex-shrink`无效。\n\n如果父级的空间不够：`flex-shrink` 有效，`flex-grow`无效。\n\n如果你有疑问欢迎讨论，一起学习。\n\n","source":"_posts/flex.md","raw":"---\ntitle: 深入理解 flex-grow & flex-shrink & flex-basis\ndate: 2016-08-28 09:14:03\ntags:\n---\n\n## 前言\n\n`flex` 有三个属性值，分别是 `flex-grow`， `flex-shrink`， `flex-basis`，默认值是 `0 1 auto`。 发现网上详细介绍他们的文章比较少， 今天就详细说说他们，先一个一个看。\n\n## flex-grow\n\n定义项目的`放大`比例，默认值为`0`，就算存在剩余空间，也不会放大。单单几句话肯定不能表达出意思，来看个DEMO。\n\n[https://jsfiddle.net/xiecg/var5eabk/][1]\n\n\n`flex-grow`的默认值为`0`，如果没有定义该属性，是不会拥有分配`剩余空间`的权利的。`A, B, C, D, E` 的宽度分别是 `100, 120, 130, 100, 100`，父级的宽度是`660`，父级宽减去子级的全部宽度，这样`剩余空间`就是`110`。例子中`B, C`定义了`flex-grow`，分别是`1，2`，那剩余空间分成3份，B`1`份，C`2`份，比例就是`1：2`，分配计算出来的值就是B :`36.666666666666664`, C：`73.33333333333333`。这个时候`剩余空间`就被计算出来了，相加后的结果就是B：`156.66666666666666`，C：`203.33333333333331`。\n\nB的计算公式：`120 + (110 / 3) * 1`\n\nC的计算公式: `130 + (110 / 3) * 2`\n\n## flex-shrink\n\n定义项目的`缩小`比例，默认值为`1`，注意前提是空间不足的情况下，看例子。\n\n[https://jsfiddle.net/xiecg/wLsndgLy/][2]\n\n\n  [1]: https://jsfiddle.net/xiecg/var5eabk/\n  [2]: https://jsfiddle.net/xiecg/wLsndgLy/\n\n\n这里 `A, B, C` 的宽度分别是`155, 200, 50`，(注意这里的宽度我是用`flex-basis`代替的，在这个例子中和`width`的作用是一样的)。 父级宽度是`300`，计算超出的空间就是 `-105`，这样超出的 `105px` 就要被 `A, B, C` 消化掉，比例是`2：1：1`。\n\n如何消化 ？ 首先是每个项目的`wdith`值乘以`flex-shrink`值求积，\n\nA：`(155 * 2) = 310`\nB：`(200 * 1) = 200`\nC：`(50 * 1) = 50`。\n\n然后再求和所有项目的乘积。\n\n`(310 + 200 + 50) = 560`\n\n得到求占比之后还要乘以要腾出的空间。\n\nA：`(310 / 560) * 105` = `58.125`\nB：`(200 / 560) * 105` = `37.5`\nC：`(50 / 560) * 105` = `9.375`\n\n得到每一项要腾出的空间後然後\n\nA：`(155 - 58.125) = 96.875`\nB：`(200 - 37.5) = 162.5`\nC：`(50 - 9.375) = 40.625`\n\n好了，这样就得出计算后的宽度了。\n\n## flex-basis\n\n和`width`一样，他的默认值为`auto`，把上面几个例子换成`width`也是一样的。当然工作中最好用`flex-basis`，更符合规范。\n\n## 总结\n\n如果父级的空间足够：`flex-grow`有效，`flex-shrink`无效。\n\n如果父级的空间不够：`flex-shrink` 有效，`flex-grow`无效。\n\n如果你有疑问欢迎讨论，一起学习。\n\n","slug":"flex","published":1,"updated":"2016-12-06T23:58:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwe63djv0000vxpn6x7cf78k","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\">前言</a></h2><p><code>flex</code> 有三个属性值，分别是 <code>flex-grow</code>， <code>flex-shrink</code>， <code>flex-basis</code>，默认值是 <code>0 1 auto</code>。 发现网上详细介绍他们的文章比较少， 今天就详细说说他们，先一个一个看。</p>\n<h2 id=\"flex-grow\"><a href=\"#flex-grow\" class=\"headerlink\" title=\"flex-grow\">flex-grow</a></h2><p>定义项目的<code>放大</code>比例，默认值为<code>0</code>，就算存在剩余空间，也不会放大。单单几句话肯定不能表达出意思，来看个DEMO。</p>\n<p><a href=\"https://jsfiddle.net/xiecg/var5eabk/\" target=\"_blank\" rel=\"external\">https://jsfiddle.net/xiecg/var5eabk/</a></p>\n<p><code>flex-grow</code>的默认值为<code>0</code>，如果没有定义该属性，是不会拥有分配<code>剩余空间</code>的权利的。<code>A, B, C, D, E</code> 的宽度分别是 <code>100, 120, 130, 100, 100</code>，父级的宽度是<code>660</code>，父级宽减去子级的全部宽度，这样<code>剩余空间</code>就是<code>110</code>。例子中<code>B, C</code>定义了<code>flex-grow</code>，分别是<code>1，2</code>，那剩余空间分成3份，B<code>1</code>份，C<code>2</code>份，比例就是<code>1：2</code>，分配计算出来的值就是B :<code>36.666666666666664</code>, C：<code>73.33333333333333</code>。这个时候<code>剩余空间</code>就被计算出来了，相加后的结果就是B：<code>156.66666666666666</code>，C：<code>203.33333333333331</code>。</p>\n<p>B的计算公式：<code>120 + (110 / 3) * 1</code></p>\n<p>C的计算公式: <code>130 + (110 / 3) * 2</code></p>\n<h2 id=\"flex-shrink\"><a href=\"#flex-shrink\" class=\"headerlink\" title=\"flex-shrink\">flex-shrink</a></h2><p>定义项目的<code>缩小</code>比例，默认值为<code>1</code>，注意前提是空间不足的情况下，看例子。</p>\n<p><a href=\"https://jsfiddle.net/xiecg/wLsndgLy/\" target=\"_blank\" rel=\"external\">https://jsfiddle.net/xiecg/wLsndgLy/</a></p>\n<p>这里 <code>A, B, C</code> 的宽度分别是<code>155, 200, 50</code>，(注意这里的宽度我是用<code>flex-basis</code>代替的，在这个例子中和<code>width</code>的作用是一样的)。 父级宽度是<code>300</code>，计算超出的空间就是 <code>-105</code>，这样超出的 <code>105px</code> 就要被 <code>A, B, C</code> 消化掉，比例是<code>2：1：1</code>。</p>\n<p>如何消化 ？ 首先是每个项目的<code>wdith</code>值乘以<code>flex-shrink</code>值求积，</p>\n<p>A：<code>(155 * 2) = 310</code><br>B：<code>(200 * 1) = 200</code><br>C：<code>(50 * 1) = 50</code>。</p>\n<p>然后再求和所有项目的乘积。</p>\n<p><code>(310 + 200 + 50) = 560</code></p>\n<p>得到求占比之后还要乘以要腾出的空间。</p>\n<p>A：<code>(310 / 560) * 105</code> = <code>58.125</code><br>B：<code>(200 / 560) * 105</code> = <code>37.5</code><br>C：<code>(50 / 560) * 105</code> = <code>9.375</code></p>\n<p>得到每一项要腾出的空间後然後</p>\n<p>A：<code>(155 - 58.125) = 96.875</code><br>B：<code>(200 - 37.5) = 162.5</code><br>C：<code>(50 - 9.375) = 40.625</code></p>\n<p>好了，这样就得出计算后的宽度了。</p>\n<h2 id=\"flex-basis\"><a href=\"#flex-basis\" class=\"headerlink\" title=\"flex-basis\">flex-basis</a></h2><p>和<code>width</code>一样，他的默认值为<code>auto</code>，把上面几个例子换成<code>width</code>也是一样的。当然工作中最好用<code>flex-basis</code>，更符合规范。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\">总结</a></h2><p>如果父级的空间足够：<code>flex-grow</code>有效，<code>flex-shrink</code>无效。</p>\n<p>如果父级的空间不够：<code>flex-shrink</code> 有效，<code>flex-grow</code>无效。</p>\n<p>如果你有疑问欢迎讨论，一起学习。</p>\n","excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\">前言</a></h2><p><code>flex</code> 有三个属性值，分别是 <code>flex-grow</code>， <code>flex-shrink</code>， <code>flex-basis</code>，默认值是 <code>0 1 auto</code>。 发现网上详细介绍他们的文章比较少， 今天就详细说说他们，先一个一个看。</p>\n<h2 id=\"flex-grow\"><a href=\"#flex-grow\" class=\"headerlink\" title=\"flex-grow\">flex-grow</a></h2><p>定义项目的<code>放大</code>比例，默认值为<code>0</code>，就算存在剩余空间，也不会放大。单单几句话肯定不能表达出意思，来看个DEMO。</p>\n<p><a href=\"https://jsfiddle.net/xiecg/var5eabk/\">https://jsfiddle.net/xiecg/var5eabk/</a></p>\n<p><code>flex-grow</code>的默认值为<code>0</code>，如果没有定义该属性，是不会拥有分配<code>剩余空间</code>的权利的。<code>A, B, C, D, E</code> 的宽度分别是 <code>100, 120, 130, 100, 100</code>，父级的宽度是<code>660</code>，父级宽减去子级的全部宽度，这样<code>剩余空间</code>就是<code>110</code>。例子中<code>B, C</code>定义了<code>flex-grow</code>，分别是<code>1，2</code>，那剩余空间分成3份，B<code>1</code>份，C<code>2</code>份，比例就是<code>1：2</code>，分配计算出来的值就是B :<code>36.666666666666664</code>, C：<code>73.33333333333333</code>。这个时候<code>剩余空间</code>就被计算出来了，相加后的结果就是B：<code>156.66666666666666</code>，C：<code>203.33333333333331</code>。</p>\n<p>B的计算公式：<code>120 + (110 / 3) * 1</code></p>\n<p>C的计算公式: <code>130 + (110 / 3) * 2</code></p>\n<h2 id=\"flex-shrink\"><a href=\"#flex-shrink\" class=\"headerlink\" title=\"flex-shrink\">flex-shrink</a></h2><p>定义项目的<code>缩小</code>比例，默认值为<code>1</code>，注意前提是空间不足的情况下，看例子。</p>\n<p><a href=\"https://jsfiddle.net/xiecg/wLsndgLy/\">https://jsfiddle.net/xiecg/wLsndgLy/</a></p>\n<p>这里 <code>A, B, C</code> 的宽度分别是<code>155, 200, 50</code>，(注意这里的宽度我是用<code>flex-basis</code>代替的，在这个例子中和<code>width</code>的作用是一样的)。 父级宽度是<code>300</code>，计算超出的空间就是 <code>-105</code>，这样超出的 <code>105px</code> 就要被 <code>A, B, C</code> 消化掉，比例是<code>2：1：1</code>。</p>\n<p>如何消化 ？ 首先是每个项目的<code>wdith</code>值乘以<code>flex-shrink</code>值求积，</p>\n<p>A：<code>(155 * 2) = 310</code><br>B：<code>(200 * 1) = 200</code><br>C：<code>(50 * 1) = 50</code>。</p>\n<p>然后再求和所有项目的乘积。</p>\n<p><code>(310 + 200 + 50) = 560</code></p>\n<p>得到求占比之后还要乘以要腾出的空间。</p>\n<p>A：<code>(310 / 560) * 105</code> = <code>58.125</code><br>B：<code>(200 / 560) * 105</code> = <code>37.5</code><br>C：<code>(50 / 560) * 105</code> = <code>9.375</code></p>\n<p>得到每一项要腾出的空间後然後</p>\n<p>A：<code>(155 - 58.125) = 96.875</code><br>B：<code>(200 - 37.5) = 162.5</code><br>C：<code>(50 - 9.375) = 40.625</code></p>\n<p>好了，这样就得出计算后的宽度了。</p>\n<h2 id=\"flex-basis\"><a href=\"#flex-basis\" class=\"headerlink\" title=\"flex-basis\">flex-basis</a></h2><p>和<code>width</code>一样，他的默认值为<code>auto</code>，把上面几个例子换成<code>width</code>也是一样的。当然工作中最好用<code>flex-basis</code>，更符合规范。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\">总结</a></h2><p>如果父级的空间足够：<code>flex-grow</code>有效，<code>flex-shrink</code>无效。</p>\n<p>如果父级的空间不够：<code>flex-shrink</code> 有效，<code>flex-grow</code>无效。</p>\n<p>如果你有疑问欢迎讨论，一起学习。</p>\n"},{"title":"基于vue.js的选择器组件","date":"2016-10-23T11:27:58.000Z","_content":"\n\n# 概述\n\n基于vue.js选择器组件\n\n# DEMO\n\n![code.png][1]\n\n# 安装\n\n```Bash\nnpm install vue-3d-picker --save\n```\n\n```JavaScript\nimport picker from 'vue-3d-picker';\nVue.component(picker.name, picker);\n```\n\n# 基础用法\n```HTML\n<picker v-model=\"visible\" :data-items=\"items\" @change=\"onValuesChange\">\n\t<div class=\"top-content\" slot=\"top-content\">Top of the content.</div>\n\t<div class=\"bottom-content\" slot=\"bottom-content\">Bottom of the content.</div>\n</picker>\n```\n\n```JavaScript\nexport default {\n  methods: {\n    onValuesChange(result, pickerEl, reset) {\n      let year = result[0], month = result[1];\n      // result -> 结果\n      // pickerEl -> 方法\n      // reset -> 重置  usage: reset(index, newData)\n    }\n  },\n\n  data() {\n    return {\n      visible: true,\n      items: [\n        {\n          values: ['2000', '2001', '2002', '2003', '2004', '2005', '2006', '2007'],\n        }, {\n          values: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\n        }\n      ]\n    }\n  }\n}\n```\n\n# 选项\n\nPicker Options:\n\n| 参数 | 描述 |\n| ----- | ----- |\n| v-model | 默认值为false，控制显示和隐藏 |\n| :data-items | 默认值为[]，显示的数组|\n| @change | 内容改变时执行的监听函数 |\n\n\nPicker Items Options:\n\n| 参数 | 描述 | 类型 | 默认值 |\n| ----- | ----- | ----- | ----- |\n| index | 默认选中的索引值 | Number | 0 |\n| values | 赋值的数组 | Array | [] |\n| width | 显示的宽度，单位是 % | String | 'flex' |\n| name | 显示数据的字段名，默认值是value .| String | 'value' |\n \n# 例子\n\n```Bash\nnpm init\nnpm run dev\n```\n\n# 注意\n\n需要 [postcss-loader][2] 来支持picker组件的兼容性\n\n\n  [1]: https://xiecg.github.io/other/vue-picker/code.png\n  [2]: https://github.com/postcss/postcss-loader","source":"_posts/vue-picker.md","raw":"---\ntitle: 基于vue.js的选择器组件\ndate: 2016-10-23 19:27:58\ntags:\n---\n\n\n# 概述\n\n基于vue.js选择器组件\n\n# DEMO\n\n![code.png][1]\n\n# 安装\n\n```Bash\nnpm install vue-3d-picker --save\n```\n\n```JavaScript\nimport picker from 'vue-3d-picker';\nVue.component(picker.name, picker);\n```\n\n# 基础用法\n```HTML\n<picker v-model=\"visible\" :data-items=\"items\" @change=\"onValuesChange\">\n\t<div class=\"top-content\" slot=\"top-content\">Top of the content.</div>\n\t<div class=\"bottom-content\" slot=\"bottom-content\">Bottom of the content.</div>\n</picker>\n```\n\n```JavaScript\nexport default {\n  methods: {\n    onValuesChange(result, pickerEl, reset) {\n      let year = result[0], month = result[1];\n      // result -> 结果\n      // pickerEl -> 方法\n      // reset -> 重置  usage: reset(index, newData)\n    }\n  },\n\n  data() {\n    return {\n      visible: true,\n      items: [\n        {\n          values: ['2000', '2001', '2002', '2003', '2004', '2005', '2006', '2007'],\n        }, {\n          values: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\n        }\n      ]\n    }\n  }\n}\n```\n\n# 选项\n\nPicker Options:\n\n| 参数 | 描述 |\n| ----- | ----- |\n| v-model | 默认值为false，控制显示和隐藏 |\n| :data-items | 默认值为[]，显示的数组|\n| @change | 内容改变时执行的监听函数 |\n\n\nPicker Items Options:\n\n| 参数 | 描述 | 类型 | 默认值 |\n| ----- | ----- | ----- | ----- |\n| index | 默认选中的索引值 | Number | 0 |\n| values | 赋值的数组 | Array | [] |\n| width | 显示的宽度，单位是 % | String | 'flex' |\n| name | 显示数据的字段名，默认值是value .| String | 'value' |\n \n# 例子\n\n```Bash\nnpm init\nnpm run dev\n```\n\n# 注意\n\n需要 [postcss-loader][2] 来支持picker组件的兼容性\n\n\n  [1]: https://xiecg.github.io/other/vue-picker/code.png\n  [2]: https://github.com/postcss/postcss-loader","slug":"vue-picker","published":1,"updated":"2016-12-06T23:58:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciwe63djz0001vxpnxp6ib01a","content":"<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\">概述</a></h1><p>基于vue.js选择器组件</p>\n<h1 id=\"DEMO\"><a href=\"#DEMO\" class=\"headerlink\" title=\"DEMO\">DEMO</a></h1><p><img src=\"https://xiecg.github.io/other/vue-picker/code.png\" alt=\"code.png\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\">安装</a></h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install vue-3d-picker --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> picker <span class=\"keyword\">from</span> <span class=\"string\">'vue-3d-picker'</span>;</div><div class=\"line\">Vue.component(picker.name, picker);</div></pre></td></tr></table></figure>\n<h1 id=\"基础用法\"><a href=\"#基础用法\" class=\"headerlink\" title=\"基础用法\">基础用法</a></h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">picker</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"visible\"</span> <span class=\"attr\">:data-items</span>=<span class=\"string\">\"items\"</span> @<span class=\"attr\">change</span>=<span class=\"string\">\"onValuesChange\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"top-content\"</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"top-content\"</span>&gt;</span>Top of the content.<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bottom-content\"</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"bottom-content\"</span>&gt;</span>Bottom of the content.<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">picker</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    onValuesChange(result, pickerEl, reset) &#123;</div><div class=\"line\">      <span class=\"keyword\">let</span> year = result[<span class=\"number\">0</span>], month = result[<span class=\"number\">1</span>];</div><div class=\"line\">      <span class=\"comment\">// result -&gt; 结果</span></div><div class=\"line\">      <span class=\"comment\">// pickerEl -&gt; 方法</span></div><div class=\"line\">      <span class=\"comment\">// reset -&gt; 重置  usage: reset(index, newData)</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\"></div><div class=\"line\">  data() &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">      visible: <span class=\"literal\">true</span>,</div><div class=\"line\">      items: [</div><div class=\"line\">        &#123;</div><div class=\"line\">          values: [<span class=\"string\">'2000'</span>, <span class=\"string\">'2001'</span>, <span class=\"string\">'2002'</span>, <span class=\"string\">'2003'</span>, <span class=\"string\">'2004'</span>, <span class=\"string\">'2005'</span>, <span class=\"string\">'2006'</span>, <span class=\"string\">'2007'</span>],</div><div class=\"line\">        &#125;, &#123;</div><div class=\"line\">          values: [<span class=\"string\">'1'</span>, <span class=\"string\">'2'</span>, <span class=\"string\">'3'</span>, <span class=\"string\">'4'</span>, <span class=\"string\">'5'</span>, <span class=\"string\">'6'</span>, <span class=\"string\">'7'</span>, <span class=\"string\">'8'</span>, <span class=\"string\">'9'</span>, <span class=\"string\">'10'</span>, <span class=\"string\">'11'</span>, <span class=\"string\">'12'</span>],</div><div class=\"line\">        &#125;</div><div class=\"line\">      ]</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\">选项</a></h1><p>Picker Options:</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v-model</td>\n<td>默认值为false，控制显示和隐藏</td>\n</tr>\n<tr>\n<td>:data-items</td>\n<td>默认值为[]，显示的数组</td>\n</tr>\n<tr>\n<td>@change</td>\n<td>内容改变时执行的监听函数</td>\n</tr>\n</tbody>\n</table>\n<p>Picker Items Options:</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>index</td>\n<td>默认选中的索引值</td>\n<td>Number</td>\n<td>0</td>\n</tr>\n<tr>\n<td>values</td>\n<td>赋值的数组</td>\n<td>Array</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>width</td>\n<td>显示的宽度，单位是 %</td>\n<td>String</td>\n<td>‘flex’</td>\n</tr>\n<tr>\n<td>name</td>\n<td>显示数据的字段名，默认值是value .</td>\n<td>String</td>\n<td>‘value’</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\">例子</a></h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm init</div><div class=\"line\">npm run dev</div></pre></td></tr></table></figure>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\">注意</a></h1><p>需要 <a href=\"https://github.com/postcss/postcss-loader\" target=\"_blank\" rel=\"external\">postcss-loader</a> 来支持picker组件的兼容性</p>\n","excerpt":"","more":"<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\">概述</a></h1><p>基于vue.js选择器组件</p>\n<h1 id=\"DEMO\"><a href=\"#DEMO\" class=\"headerlink\" title=\"DEMO\">DEMO</a></h1><p><img src=\"https://xiecg.github.io/other/vue-picker/code.png\" alt=\"code.png\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\">安装</a></h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install vue-3d-picker --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> picker <span class=\"keyword\">from</span> <span class=\"string\">'vue-3d-picker'</span>;</div><div class=\"line\">Vue.component(picker.name, picker);</div></pre></td></tr></table></figure>\n<h1 id=\"基础用法\"><a href=\"#基础用法\" class=\"headerlink\" title=\"基础用法\">基础用法</a></h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">picker</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"visible\"</span> <span class=\"attr\">:data-items</span>=<span class=\"string\">\"items\"</span> @<span class=\"attr\">change</span>=<span class=\"string\">\"onValuesChange\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"top-content\"</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"top-content\"</span>&gt;</span>Top of the content.<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bottom-content\"</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"bottom-content\"</span>&gt;</span>Bottom of the content.<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">picker</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    onValuesChange(result, pickerEl, reset) &#123;</div><div class=\"line\">      <span class=\"keyword\">let</span> year = result[<span class=\"number\">0</span>], month = result[<span class=\"number\">1</span>];</div><div class=\"line\">      <span class=\"comment\">// result -&gt; 结果</span></div><div class=\"line\">      <span class=\"comment\">// pickerEl -&gt; 方法</span></div><div class=\"line\">      <span class=\"comment\">// reset -&gt; 重置  usage: reset(index, newData)</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\"></div><div class=\"line\">  data() &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">      visible: <span class=\"literal\">true</span>,</div><div class=\"line\">      items: [</div><div class=\"line\">        &#123;</div><div class=\"line\">          values: [<span class=\"string\">'2000'</span>, <span class=\"string\">'2001'</span>, <span class=\"string\">'2002'</span>, <span class=\"string\">'2003'</span>, <span class=\"string\">'2004'</span>, <span class=\"string\">'2005'</span>, <span class=\"string\">'2006'</span>, <span class=\"string\">'2007'</span>],</div><div class=\"line\">        &#125;, &#123;</div><div class=\"line\">          values: [<span class=\"string\">'1'</span>, <span class=\"string\">'2'</span>, <span class=\"string\">'3'</span>, <span class=\"string\">'4'</span>, <span class=\"string\">'5'</span>, <span class=\"string\">'6'</span>, <span class=\"string\">'7'</span>, <span class=\"string\">'8'</span>, <span class=\"string\">'9'</span>, <span class=\"string\">'10'</span>, <span class=\"string\">'11'</span>, <span class=\"string\">'12'</span>],</div><div class=\"line\">        &#125;</div><div class=\"line\">      ]</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\">选项</a></h1><p>Picker Options:</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v-model</td>\n<td>默认值为false，控制显示和隐藏</td>\n</tr>\n<tr>\n<td>:data-items</td>\n<td>默认值为[]，显示的数组</td>\n</tr>\n<tr>\n<td>@change</td>\n<td>内容改变时执行的监听函数</td>\n</tr>\n</tbody>\n</table>\n<p>Picker Items Options:</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>index</td>\n<td>默认选中的索引值</td>\n<td>Number</td>\n<td>0</td>\n</tr>\n<tr>\n<td>values</td>\n<td>赋值的数组</td>\n<td>Array</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>width</td>\n<td>显示的宽度，单位是 %</td>\n<td>String</td>\n<td>‘flex’</td>\n</tr>\n<tr>\n<td>name</td>\n<td>显示数据的字段名，默认值是value .</td>\n<td>String</td>\n<td>‘value’</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\">例子</a></h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm init</div><div class=\"line\">npm run dev</div></pre></td></tr></table></figure>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\">注意</a></h1><p>需要 <a href=\"https://github.com/postcss/postcss-loader\">postcss-loader</a> 来支持picker组件的兼容性</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}